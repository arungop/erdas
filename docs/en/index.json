[
{
	"uri": "/en/basics/",
	"title": "Basics",
	"tags": [],
	"description": "",
	"content": "Chapter 1 Basics Discover the basic things you can do with Erdas Imagine. These are essential knowledge before dive deep into analysis.\n"
},
{
	"uri": "/en/cont/pages/",
	"title": "Pages organization",
	"tags": [],
	"description": "",
	"content": "In Hugo, pages are the core of your site. Once it is configured, pages are definitely the added value to your documentation site.\nFolders Organize your site like any other Hugo project. Typically, you will have a content folder with all your pages.\ncontent ├── level-one │ ├── level-two │ │ ├── level-three │ │ │ ├── level-four │ │ │ │ ├── _index.md \u0026lt;-- /level-one/level-two/level-three/level-four │ │ │ │ ├── page-4-a.md \u0026lt;-- /level-one/level-two/level-three/level-four/page-4-a │ │ │ │ ├── page-4-b.md \u0026lt;-- /level-one/level-two/level-three/level-four/page-4-b │ │ │ │ └── page-4-c.md \u0026lt;-- /level-one/level-two/level-three/level-four/page-4-c │ │ │ ├── _index.md \u0026lt;-- /level-one/level-two/level-three │ │ │ ├── page-3-a.md \u0026lt;-- /level-one/level-two/level-three/page-3-a │ │ │ ├── page-3-b.md \u0026lt;-- /level-one/level-two/level-three/page-3-b │ │ │ └── page-3-c.md \u0026lt;-- /level-one/level-two/level-three/page-3-c │ │ ├── _index.md \u0026lt;-- /level-one/level-two │ │ ├── page-2-a.md \u0026lt;-- /level-one/level-two/page-2-a │ │ ├── page-2-b.md \u0026lt;-- /level-one/level-two/page-2-b │ │ └── page-2-c.md \u0026lt;-- /level-one/level-two/page-2-c │ ├── _index.md \u0026lt;-- /level-one │ ├── page-1-a.md \u0026lt;-- /level-one/page-1-a │ ├── page-1-b.md \u0026lt;-- /level-one/page-1-b │ └── page-1-c.md \u0026lt;-- /level-one/page-1-c ├── _index.md \u0026lt;-- / └── page-top.md \u0026lt;-- /page-top  _index.md is required in each folder, it’s your “folder home page”\n Types Hugo-theme-learn defines two types of pages. Default and Chapter. Both can be used at any level of the documentation, the only difference being layout display.\nA Chapter displays a page meant to be used as introduction for a set of child pages. Commonly, it contains a simple title and a catch line to define content that can be found under it. You can define any HTML as prefix for the menu. In the example below, it\u0026rsquo;s just a number but that could be an icon.\n+++ title = \u0026#34;Basics\u0026#34; chapter = true weight = 5 pre = \u0026#34;\u0026lt;b\u0026gt;1. \u0026lt;/b\u0026gt;\u0026#34; +++ ### Chapter 1  # Basics Discover what this Hugo theme is all about and the core-concepts behind it. To tell Hugo-theme-learn to consider a page as a chapter, set chapter=true in the Front Matter of the page.\nA Default page is any other content page.\n+++ title = \u0026#34;Installation\u0026#34; weight = 15 +++ The following steps are here to help you initialize your new website. If you don\u0026rsquo;t know Hugo at all, we strongly suggest you to train by following this great documentation for beginners.\nCreate your project Hugo provides a new command to create a new website.\nhugo new site \u0026lt;new_project\u0026gt; Hugo-theme-learn provides archetypes to help you create this kind of pages.\nFront Matter configuration Each Hugo page has to define a Front Matter in yaml, toml or json.\nHugo-theme-learn uses the following parameters on top of Hugo ones :\n+++ # Table of content (toc) is enabled by default. Set this parameter to true to disable it. # Note: Toc is always disabled for chapter pages disableToc = \u0026#34;false\u0026#34; # If set, this will be used for the page\u0026#39;s menu entry (instead of the `title` attribute) menuTitle = \u0026#34;\u0026#34; # The title of the page in menu will be prefixed by this HTML content pre = \u0026#34;\u0026#34; # The title of the page in menu will be postfixed by this HTML content post = \u0026#34;\u0026#34; # Set the page as a chapter, changing the way it\u0026#39;s displayed chapter = false # Hide a menu entry by setting this to true hidden = false # Display name of this page modifier. If set, it will be displayed in the footer. LastModifierDisplayName = \u0026#34;\u0026#34; # Email of this page modifier. If set with LastModifierDisplayName, it will be displayed in the footer LastModifierEmail = \u0026#34;\u0026#34; +++ Add icon to a menu entry In the page frontmatter, add a pre param to insert any HTML code before the menu label. The example below uses the Github icon.\n+++ title = \u0026#34;Github repo\u0026#34; pre = \u0026#34;\u0026lt;i class=\u0026#39;fab fa-github\u0026#39;\u0026gt;\u0026lt;/i\u0026gt; \u0026#34; +++ Ordering sibling menu/page entries Hugo provides a flexible way to handle order for your pages.\nThe simplest way is to set weight parameter to a number.\n+++ title = \u0026#34;My page\u0026#34; weight = 5 +++ Using a custom title for menu entries By default, Hugo-theme-learn will use a page\u0026rsquo;s title attribute for the menu item (or linkTitle if defined).\nBut a page\u0026rsquo;s title has to be descriptive on its own while the menu is a hierarchy. We\u0026rsquo;ve added the menuTitle parameter for that purpose:\nFor example (for a page named content/install/linux.md):\n+++ title = \u0026#34;Install on Linux\u0026#34; menuTitle = \u0026#34;Linux\u0026#34; +++ Homepage To configure your home page, you basically have three choices:\n Create an _index.md document in content folder and fill the file with Markdown content Create an index.html file in the static folder and fill the file with HTML content Configure your server to automatically redirect home page to one your documentation page  "
},
{
	"uri": "/en/classification/",
	"title": "Classification",
	"tags": [],
	"description": "",
	"content": "Classification is the process of sorting pixels into a finite number of individual classes, or categories, of data based on their data file values. If a pixel satisfies a certain set of criteria, then the pixel is assigned to the class that corresponds to those criteria. There are two ways to classify pixels into different categories Supervised and Unsupervised.\n"
},
{
	"uri": "/en/cont/",
	"title": "Content",
	"tags": [],
	"description": "",
	"content": "Chapter 2 Content Find out how to create and organize your content quickly and intuitively.\n"
},
{
	"uri": "/en/cont/archetypes/",
	"title": "Archetypes",
	"tags": [],
	"description": "",
	"content": "Using the command: hugo new [relative new content path], you can start a content file with the date and title automatically set. While this is a welcome feature, active writers need more : archetypes.\nIt is pre-configured skeleton pages with default front matter. Please refer to the documentation for types of page to understand the differences.\nChapter To create a Chapter page, run the following commands\nhugo new --kind chapter \u0026lt;name\u0026gt;/_index.md It will create a page with predefined Front-Matter:\n+++ title = \u0026#34;{{ replace .Name \u0026#34;-\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#34; date = {{ .Date }} weight = 5 chapter = true pre = \u0026#34;\u0026lt;b\u0026gt;X. \u0026lt;/b\u0026gt;\u0026#34; +++ ### Chapter X  # Some Chapter title Lorem Ipsum. Default To create a default page, run either one of the following commands\n# Either hugo new \u0026lt;chapter\u0026gt;/\u0026lt;name\u0026gt;/_index.md # Or hugo new \u0026lt;chapter\u0026gt;/\u0026lt;name\u0026gt;.md It will create a page with predefined Front-Matter:\n+++ title = \u0026#34;{{ replace .Name \u0026#34;-\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#34; date = {{ .Date }} weight = 5 +++ Lorem Ipsum. "
},
{
	"uri": "/en/basics/processing/",
	"title": "Processes in digital image processing",
	"tags": [],
	"description": "",
	"content": "Preprocessing These operations aim to correct distorted or degraded image data to create a more faithful representation of the original scene and to improve an image’s utility for further manipulation later on. This typically involves the initial processing of raw image data to eliminate noise removal, radiometric correction, geometric correction, and image subsetting, layer stacking and mosaicking.\nImage Enhancement The primary goal of image enhancement is to improve the visual interpretability of an image by increasing the apparent distinction between the features in the scene. Most enhancement techniques may be categorized as either point or neighborhood operations. Point operations modify the brightness value of each pixel in an image data set independently. Neighborhood operations modify the value of each pixel based on neighboring brightness values. Either form of enhancement can be performed on single-band (monochrome) images or on the individ- ual components of multi-image composites. The resulting images may also be recorded or displayed in black and white or in color. Choosing the appropriate enhancement(s) for any particular application is an art and often a matter of personal preference.\nFeature Extraction Image interpretation keys such as size, shape, texture, pattern, tone/colour, shadow, location and spatial association are used to extract features from imagery.\nClassification The overall objective of image classication procedures is to automatically categorize all pixels in an image into land cover classes or themes. Often this is done using spectral patterns; that is, pixels that share similar combinations of spectral reectance or emissivity are grouped together in classes that are assumed to represent particular categories of surface features. No attention is paid to the neighbors or surroundings of the pixel being classied. The term spectral pattern recognition refers to the family of classication procedures that utilizes this pixel by-pixel spectral information as the basis for automated land cover classication. This is of two types: Supervised and Unsupervised classification. In contrast, the decision rules may be based on the geometric shapes, sizes, and patterns present in the image data. These procedures fall into the domain of spatial pattern recognition. Hybrid methods (object-based image analysis (OBIA)), in which both spatial and spectral patterns are used for classication, are increasingly common.\nPost processing Post-processing is the process of adjusting a previously-captured image to obtain a desired look. It encompasses everything from simple whole-image adjustments to detailed per-pixel touch-up work. Post-processing techniques are filtering and change detection.\nAccuracy Assessment One of the most important final steps at classification process is accuracy assessment. The aim of accuracy assessment is to quantitatively assess how effectively the pixels were sampled into the correct land cover classes. Accuracy assessments are commission and omission error, sensitivity and specificity, positive and negative predictive power and Kappa statistics. Accuracy assessment can be done by ground truthing, compare with high resolution image, Google earth and Google Map.\nDigital image processing softwares Digital image processing (DIP) is carried out by using softwares such as ERDAS IMAGINE, ENVI. Here ERDAS IMAGINE software is used for the processing of digital images. ERDAS IMAGINE is an image processing software package that allows users to process both geospatial and other imagery as well as vector data. Erdas can handle multi-spectral imagery, hyperspectral imagery and LiDAR from various sensors. Erdas also offers a 3D viewing module (VirtualGIS) and a vector module for modeling. The native programming language is EML (Erdas Macro Language). Erdas is integrated within other GIS and remote sensing applications and the storage format for the imagery can be read in many other applications (*.img files).\n"
},
{
	"uri": "/en/basics/requirements/",
	"title": "Requirements",
	"tags": [],
	"description": "",
	"content": "Thanks to the simplicity of Hugo, this page is as empty as this theme needs requirements.\nJust download latest version of Hugo binary (\u0026gt; 0.25) for your OS (Windows, Linux, Mac) : it\u0026rsquo;s that simple.\n"
},
{
	"uri": "/en/enhancement/",
	"title": "Enhancement Techniques",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/en/cont/markdown/",
	"title": "Markdown syntax",
	"tags": [],
	"description": "",
	"content": " This page is a shameful copy of the great Grav original page. Only difference is information about image customization (resizing, add CSS classes\u0026hellip;)\n Let\u0026rsquo;s face it: Writing content for the Web is tiresome. WYSIWYG editors help alleviate this task, but they generally result in horrible code, or worse yet, ugly web pages.\nMarkdown is a better way to write HTML, without all the complexities and ugliness that usually accompanies it.\nSome of the key benefits are:\n Markdown is simple to learn, with minimal extra characters so it\u0026rsquo;s also quicker to write content. Less chance of errors when writing in markdown. Produces valid XHTML output. Keeps the content and the visual display separate, so you cannot mess up the look of your site. Write in any text editor or Markdown application you like. Markdown is a joy to use!  John Gruber, the author of Markdown, puts it like this:\n The overriding design goal for Markdown’s formatting syntax is to make it as readable as possible. The idea is that a Markdown-formatted document should be publishable as-is, as plain text, without looking like it’s been marked up with tags or formatting instructions. While Markdown’s syntax has been influenced by several existing text-to-HTML filters, the single biggest source of inspiration for Markdown’s syntax is the format of plain text email. \u0026ndash; John Gruber\n Grav ships with built-in support for Markdown and Markdown Extra. You must enable Markdown Extra in your system.yaml configuration file\nWithout further delay, let us go over the main elements of Markdown and what the resulting HTML looks like:\nBookmark this page for easy future reference!\n Headings Headings from h1 through h6 are constructed with a # for each level:\n# h1 Heading ## h2 Heading ### h3 Heading #### h4 Heading ##### h5 Heading ###### h6 Heading Renders to:\nh1 Heading h2 Heading h3 Heading h4 Heading h5 Heading h6 Heading HTML:\n\u0026lt;h1\u0026gt;h1 Heading\u0026lt;/h1\u0026gt; \u0026lt;h2\u0026gt;h2 Heading\u0026lt;/h2\u0026gt; \u0026lt;h3\u0026gt;h3 Heading\u0026lt;/h3\u0026gt; \u0026lt;h4\u0026gt;h4 Heading\u0026lt;/h4\u0026gt; \u0026lt;h5\u0026gt;h5 Heading\u0026lt;/h5\u0026gt; \u0026lt;h6\u0026gt;h6 Heading\u0026lt;/h6\u0026gt; Comments Comments should be HTML compatible\n\u0026lt;!-- This is a comment --\u0026gt; Comment below should NOT be seen:\nHorizontal Rules The HTML \u0026lt;hr\u0026gt; element is for creating a \u0026ldquo;thematic break\u0026rdquo; between paragraph-level elements. In markdown, you can create a \u0026lt;hr\u0026gt; with any of the following:\n ___: three consecutive underscores ---: three consecutive dashes ***: three consecutive asterisks  renders to:\n Body Copy Body copy written as normal, plain text will be wrapped with \u0026lt;p\u0026gt;\u0026lt;/p\u0026gt; tags in the rendered HTML.\nSo this body copy:\nLorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad. renders to this HTML:\n\u0026lt;p\u0026gt;Lorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad.\u0026lt;/p\u0026gt; Emphasis Bold For emphasizing a snippet of text with a heavier font-weight.\nThe following snippet of text is rendered as bold text.\n**rendered as bold text** renders to:\nrendered as bold text\nand this HTML\n\u0026lt;strong\u0026gt;rendered as bold text\u0026lt;/strong\u0026gt; Italics For emphasizing a snippet of text with italics.\nThe following snippet of text is rendered as italicized text.\n_rendered as italicized text_ renders to:\nrendered as italicized text\nand this HTML:\n\u0026lt;em\u0026gt;rendered as italicized text\u0026lt;/em\u0026gt; Strikethrough In GFM (GitHub flavored Markdown) you can do strikethroughs.\n~~Strike through this text.~~ Which renders to:\nStrike through this text.\nHTML:\n\u0026lt;del\u0026gt;Strike through this text.\u0026lt;/del\u0026gt; Blockquotes For quoting blocks of content from another source within your document.\nAdd \u0026gt; before any text you want to quote.\n\u0026gt; **Fusion Drive** combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. Renders to:\n Fusion Drive combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined.\n and this HTML:\n\u0026lt;blockquote\u0026gt; \u0026lt;p\u0026gt;\u0026lt;strong\u0026gt;Fusion Drive\u0026lt;/strong\u0026gt; combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined.\u0026lt;/p\u0026gt; \u0026lt;/blockquote\u0026gt; Blockquotes can also be nested:\n\u0026gt; Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. \u0026gt; \u0026gt; \u0026gt; Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. \u0026gt; \u0026gt; Mauris sit amet ligula egestas, feugiat metus tincidunt, luctus libero. Donec congue finibus tempor. Vestibulum aliquet sollicitudin erat, ut aliquet purus posuere luctus. Renders to:\n Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi.\n Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam.\n Mauris sit amet ligula egestas, feugiat metus tincidunt, luctus libero. Donec congue finibus tempor. Vestibulum aliquet sollicitudin erat, ut aliquet purus posuere luctus.\n Notices The old mechanism for notices overriding the block quote syntax (\u0026gt;\u0026gt;\u0026gt;) has been deprecated. Notices are now handled via a dedicated plugin called Markdown Notices\n Lists Unordered A list of items in which the order of the items does not explicitly matter.\nYou may use any of the following symbols to denote bullets for each list item:\n* valid bullet - valid bullet + valid bullet For example\n+ Lorem ipsum dolor sit amet + Consectetur adipiscing elit + Integer molestie lorem at massa + Facilisis in pretium nisl aliquet + Nulla volutpat aliquam velit - Phasellus iaculis neque - Purus sodales ultricies - Vestibulum laoreet porttitor sem - Ac tristique libero volutpat at + Faucibus porta lacus fringilla vel + Aenean sit amet erat nunc + Eget porttitor lorem Renders to:\n Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit  Phasellus iaculis neque Purus sodales ultricies Vestibulum laoreet porttitor sem Ac tristique libero volutpat at   Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem  And this HTML\n\u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;Lorem ipsum dolor sit amet\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Consectetur adipiscing elit\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Integer molestie lorem at massa\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Facilisis in pretium nisl aliquet\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Nulla volutpat aliquam velit \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;Phasellus iaculis neque\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Purus sodales ultricies\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Vestibulum laoreet porttitor sem\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Ac tristique libero volutpat at\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Faucibus porta lacus fringilla vel\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Aenean sit amet erat nunc\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Eget porttitor lorem\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; Ordered A list of items in which the order of items does explicitly matter.\n1. Lorem ipsum dolor sit amet 4. Consectetur adipiscing elit 2. Integer molestie lorem at massa 8. Facilisis in pretium nisl aliquet 4. Nulla volutpat aliquam velit 99. Faucibus porta lacus fringilla vel 21. Aenean sit amet erat nunc 6. Eget porttitor lorem Renders to:\n Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem  And this HTML:\n\u0026lt;ol\u0026gt; \u0026lt;li\u0026gt;Lorem ipsum dolor sit amet\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Consectetur adipiscing elit\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Integer molestie lorem at massa\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Facilisis in pretium nisl aliquet\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Nulla volutpat aliquam velit\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Faucibus porta lacus fringilla vel\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Aenean sit amet erat nunc\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Eget porttitor lorem\u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; TIP: If you just use 1. for each number, Markdown will automatically number each item. For example:\n1. Lorem ipsum dolor sit amet 1. Consectetur adipiscing elit 1. Integer molestie lorem at massa 1. Facilisis in pretium nisl aliquet 1. Nulla volutpat aliquam velit 1. Faucibus porta lacus fringilla vel 1. Aenean sit amet erat nunc 1. Eget porttitor lorem Renders to:\n Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem  Code Inline code Wrap inline snippets of code with `.\nIn this example, `\u0026lt;section\u0026gt;\u0026lt;/section\u0026gt;` should be wrapped as **code**. Renders to:\nIn this example, \u0026lt;section\u0026gt;\u0026lt;/section\u0026gt; should be wrapped as code.\nHTML:\n\u0026lt;p\u0026gt;In this example, \u0026lt;code\u0026gt;\u0026amp;lt;section\u0026amp;gt;\u0026amp;lt;/section\u0026amp;gt;\u0026lt;/code\u0026gt; should be wrapped as \u0026lt;strong\u0026gt;code\u0026lt;/strong\u0026gt;.\u0026lt;/p\u0026gt; Indented code Or indent several lines of code by at least two spaces, as in:\n// Some comments line 1 of code line 2 of code line 3 of code Renders to:\n// Some comments line 1 of code line 2 of code line 3 of code  HTML:\n\u0026lt;pre\u0026gt; \u0026lt;code\u0026gt; // Some comments line 1 of code line 2 of code line 3 of code \u0026lt;/code\u0026gt; \u0026lt;/pre\u0026gt; Block code \u0026ldquo;fences\u0026rdquo; Use \u0026ldquo;fences\u0026rdquo; ``` to block in multiple lines of code.\nSample text here... HTML:\n\u0026lt;pre\u0026gt; \u0026lt;code\u0026gt;Sample text here...\u0026lt;/code\u0026gt; \u0026lt;/pre\u0026gt; Syntax highlighting GFM, or \u0026ldquo;GitHub Flavored Markdown\u0026rdquo; also supports syntax highlighting. To activate it, simply add the file extension of the language you want to use directly after the first code \u0026ldquo;fence\u0026rdquo;, ```js, and syntax highlighting will automatically be applied in the rendered HTML.\nSee Code Highlighting for additional documentation.\nFor example, to apply syntax highlighting to JavaScript code:\n```js grunt.initConfig({ assemble: { options: { assets: \u0026#39;docs/assets\u0026#39;, data: \u0026#39;src/data/*.{json,yml}\u0026#39;, helpers: \u0026#39;src/custom-helpers.js\u0026#39;, partials: [\u0026#39;src/partials/**/*.{hbs,md}\u0026#39;] }, pages: { options: { layout: \u0026#39;default.hbs\u0026#39; }, files: { \u0026#39;./\u0026#39;: [\u0026#39;src/templates/pages/index.hbs\u0026#39;] } } } }; ``` Renders to:\ngrunt.initConfig({ assemble: { options: { assets: \u0026#39;docs/assets\u0026#39;, data: \u0026#39;src/data/*.{json,yml}\u0026#39;, helpers: \u0026#39;src/custom-helpers.js\u0026#39;, partials: [\u0026#39;src/partials/**/*.{hbs,md}\u0026#39;] }, pages: { options: { layout: \u0026#39;default.hbs\u0026#39; }, files: { \u0026#39;./\u0026#39;: [\u0026#39;src/templates/pages/index.hbs\u0026#39;] } } } }; Tables Tables are created by adding pipes as dividers between each cell, and by adding a line of dashes (also separated by bars) beneath the header. Note that the pipes do not need to be vertically aligned.\n| Option | Description | | ------ | ----------- | | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | Renders to:\n   Option Description     data path to data files to supply the data that will be passed into templates.   engine engine to be used for processing templates. Handlebars is the default.   ext extension to be used for dest files.    And this HTML:\n\u0026lt;table\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th\u0026gt;Option\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Description\u0026lt;/th\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;data\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;path to data files to supply the data that will be passed into templates.\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;engine\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;engine to be used for processing templates. Handlebars is the default.\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;ext\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;extension to be used for dest files.\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; Right aligned text Adding a colon on the right side of the dashes below any heading will right align text for that column.\n| Option | Description | | ------:| -----------:| | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. |    Option Description     data path to data files to supply the data that will be passed into templates.   engine engine to be used for processing templates. Handlebars is the default.   ext extension to be used for dest files.    Links Basic link [Assemble](http://assemble.io) Renders to (hover over the link, there is no tooltip):\nAssemble\nHTML:\n\u0026lt;a href=\u0026#34;http://assemble.io\u0026#34;\u0026gt;Assemble\u0026lt;/a\u0026gt; Add a tooltip [Upstage](https://github.com/upstage/ \u0026#34;Visit Upstage!\u0026#34;) Renders to (hover over the link, there should be a tooltip):\nUpstage\nHTML:\n\u0026lt;a href=\u0026#34;https://github.com/upstage/\u0026#34; title=\u0026#34;Visit Upstage!\u0026#34;\u0026gt;Upstage\u0026lt;/a\u0026gt; Named Anchors Named anchors enable you to jump to the specified anchor point on the same page. For example, each of these chapters:\n# Table of Contents * [Chapter 1](#chapter-1) * [Chapter 2](#chapter-2) * [Chapter 3](#chapter-3) will jump to these sections:\n## Chapter 1 \u0026lt;a id=\u0026#34;chapter-1\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; Content for chapter one. ## Chapter 2 \u0026lt;a id=\u0026#34;chapter-2\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; Content for chapter one. ## Chapter 3 \u0026lt;a id=\u0026#34;chapter-3\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; Content for chapter one. NOTE that specific placement of the anchor tag seems to be arbitrary. They are placed inline here since it seems to be unobtrusive, and it works.\nImages Images have a similar syntax to links but include a preceding exclamation point.\n![Minion](https://octodex.github.com/images/minion.png) or\n![Alt text](https://octodex.github.com/images/stormtroopocat.jpg \u0026#34;The Stormtroopocat\u0026#34;) Like links, Images also have a footnote style syntax\nAlternative usage : note images ![Alt text][id] With a reference later in the document defining the URL location:\n[id]: https://octodex.github.com/images/dojocat.jpg \u0026quot;The Dojocat\u0026quot;  Resizing image Add HTTP parameters width and/or height to the link image to resize the image. Values are CSS values (default is auto).\n![Minion](https://octodex.github.com/images/minion.png?width=20pc) ![Minion](https://octodex.github.com/images/minion.png?height=50px) ![Minion](https://octodex.github.com/images/minion.png?height=50px\u0026amp;width=300px) Add CSS classes Add a HTTP classes parameter to the link image to add CSS classes. shadowand border are available but you could define other ones.\n![stormtroopocat](https://octodex.github.com/images/stormtroopocat.jpg?classes=shadow) ![stormtroopocat](https://octodex.github.com/images/stormtroopocat.jpg?classes=border) ![stormtroopocat](https://octodex.github.com/images/stormtroopocat.jpg?classes=border,shadow) Lightbox Add a HTTP featherlight parameter to the link image to disable lightbox. By default lightbox is enabled using the featherlight.js plugin. You can disable this by defining featherlight to false.\n![Minion](https://octodex.github.com/images/minion.png?featherlight=false) "
},
{
	"uri": "/en/basics/installation/",
	"title": "Installation",
	"tags": [],
	"description": "",
	"content": "The following steps are here to help you initialize your new website. If you don\u0026rsquo;t know Hugo at all, we strongly suggest you learn more about it by following this great documentation for beginners.\nCreate your project Hugo provides a new command to create a new website.\nhugo new site \u0026lt;new_project\u0026gt; Install the theme Install the Hugo-theme-learn theme by following this documentation\nThis theme\u0026rsquo;s repository is: https://github.com/matcornic/hugo-theme-learn.git\nAlternatively, you can download the theme as .zip file and extract it in the themes directory\nBasic configuration When building the website, you can set a theme by using --theme option. However, we suggest you modify the configuration file (config.toml) and set the theme as the default. You can also add the [outputs] section to enable the search functionality.\n# Change the default theme to be use when building the site with Hugo theme = \u0026#34;hugo-theme-learn\u0026#34; # For search functionality [outputs] home = [ \u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;, \u0026#34;JSON\u0026#34;] Create your first chapter page Chapters are pages that contain other child pages. It has a special layout style and usually just contains a chapter name, the title and a brief abstract of the section.\n### Chapter 1 # Basics Discover what this Hugo theme is all about and the core concepts behind it. renders as\nHugo-theme-learn provides archetypes to create skeletons for your website. Begin by creating your first chapter page with the following command\nhugo new --kind chapter basics/_index.md By opening the given file, you should see the property chapter=true on top, meaning this page is a chapter.\nBy default all chapters and pages are created as a draft. If you want to render these pages, remove the property draft: true from the metadata.\nCreate your first content pages Then, create content pages inside the previously created chapter. Here are two ways to create content in the chapter:\nhugo new basics/first-content.md hugo new basics/second-content/_index.md Feel free to edit thoses files by adding some sample content and replacing the title value in the beginning of the files.\nLaunching the website locally Launch by using the following command:\nhugo serve Go to http://localhost:1313\nYou should notice three things:\n You have a left-side Basics menu, containing two submenus with names equal to the title properties in the previously created files. The home page explains how to customize it by following the instructions. When you run hugo serve, when the contents of the files change, the page automatically refreshes with the changes. Neat!  Build the website When your site is ready to deploy, run the following command:\nhugo A public folder will be generated, containing all static content and assets for your website. It can now be deployed on any web server.\nThis website can be automatically published and hosted with Netlify (Read more about Automated HUGO deployments with Netlify). Alternatively, you can use Github pages\n "
},
{
	"uri": "/en/cont/syntaxhighlight/",
	"title": "Code highlighting",
	"tags": [],
	"description": "",
	"content": "Learn theme uses highlight.js to provide code syntax highlighting.\nMarkdown syntax Wrap the code block with three backticks and the name of the language. Highlight will try to auto detect the language if one is not provided.\n```json [ { \u0026#34;title\u0026#34;: \u0026#34;apples\u0026#34;, \u0026#34;count\u0026#34;: [12000, 20000], \u0026#34;description\u0026#34;: {\u0026#34;text\u0026#34;: \u0026#34;...\u0026#34;, \u0026#34;sensitive\u0026#34;: false} }, { \u0026#34;title\u0026#34;: \u0026#34;oranges\u0026#34;, \u0026#34;count\u0026#34;: [17500, null], \u0026#34;description\u0026#34;: {\u0026#34;text\u0026#34;: \u0026#34;...\u0026#34;, \u0026#34;sensitive\u0026#34;: false} } ] ``` Renders to:\n[ { \u0026#34;title\u0026#34;: \u0026#34;apples\u0026#34;, \u0026#34;count\u0026#34;: [12000, 20000], \u0026#34;description\u0026#34;: {\u0026#34;text\u0026#34;: \u0026#34;...\u0026#34;, \u0026#34;sensitive\u0026#34;: false} }, { \u0026#34;title\u0026#34;: \u0026#34;oranges\u0026#34;, \u0026#34;count\u0026#34;: [17500, null], \u0026#34;description\u0026#34;: {\u0026#34;text\u0026#34;: \u0026#34;...\u0026#34;, \u0026#34;sensitive\u0026#34;: false} } ] Supported languages Learn theme ships with its own version of highlight.js to support offline browsing. The included package supports 38 common languages, as described on the highlight.js download page.\nIdentifying failed language detection Highlight will write a warning to the browser console if a requested language was not found. For example, the following code block references an imaginary language foo. An error will be output to the console on this page.\n```foo bar ``` Could not find the language 'foo', did you forget to load/include a language module?(anonymous) @ highlight.pack.js Supporting additional languages To support languages other than the 38 common languages included in the default highlight.js you will need to download your own version of highlight.js and add it to your site content.\nDownload custom highlight.js Visit https://highlightjs.org/download/ and select your desired language support. Note that more languages means greater package size.\nAdd custom highlight.js to static resources Inside the zip archive downloaded from highlight.js extract the file named highlight.pack.js. Move this file to the new location\nstatic/js/highlight.pack.js Do not replace the existing file at themes/hugo-theme-learn/static/js/highlight.pack.js.\nIncluding the file in the correct path will override the theme default highlight.pack.js and prevent issues caused in the future if the theme default file is updated.\nFurther usage information See https://highlightjs.org/usage/\n"
},
{
	"uri": "/en/basics/configuration/",
	"title": "Configuration",
	"tags": [],
	"description": "",
	"content": "Global site parameters On top of Hugo global configuration, Hugo-theme-learn lets you define the following parameters in your config.toml (here, values are default).\nNote that some of these parameters are explained in details in other sections of this documentation.\n[params] # Prefix URL to edit current page. Will display an \u0026#34;Edit this page\u0026#34; button on top right hand corner of every page. # Useful to give opportunity to people to create merge request for your doc. # See the config.toml file from this documentation site to have an example. editURL = \u0026#34;\u0026#34; # Author of the site, will be used in meta information author = \u0026#34;\u0026#34; # Description of the site, will be used in meta information description = \u0026#34;\u0026#34; # Shows a checkmark for visited pages on the menu showVisitedLinks = false # Disable search function. It will hide search bar disableSearch = false # Javascript and CSS cache are automatically busted when new version of site is generated. # Set this to true to disable this behavior (some proxies don\u0026#39;t handle well this optimization) disableAssetsBusting = false # Set this to true to disable copy-to-clipboard button for inline code. disableInlineCopyToClipBoard = false # A title for shortcuts in menu is set by default. Set this to true to disable it. disableShortcutsTitle = false # When using mulitlingual website, disable the switch language button. disableLanguageSwitchingButton = false # Hide breadcrumbs in the header and only show the current page title disableBreadcrumb = true # Hide Next and Previous page buttons normally displayed full height beside content disableNextPrev = true # Order sections in menu by \u0026#34;weight\u0026#34; or \u0026#34;title\u0026#34;. Default to \u0026#34;weight\u0026#34; ordersectionsby = \u0026#34;weight\u0026#34; # Change default color scheme with a variant one. Can be \u0026#34;red\u0026#34;, \u0026#34;blue\u0026#34;, \u0026#34;green\u0026#34;. themeVariant = \u0026#34;\u0026#34; # Provide a list of custom css files to load relative from the `static/` folder in the site root. custom_css = [\u0026#34;css/foo.css\u0026#34;, \u0026#34;css/bar.css\u0026#34;] Activate search If not already present, add the follow lines in the same config.toml file.\n[outputs] home = [ \u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;, \u0026#34;JSON\u0026#34;] Learn theme uses the last improvement available in hugo version 20+ to generate a json index file ready to be consumed by lunr.js javascript search engine.\n Hugo generate lunrjs index.json at the root of public folder. When you build the site with hugo server, hugo generates it internally and of course it doesn’t show up in the filesystem\n "
},
{
	"uri": "/en/basics/georeferencing/",
	"title": "Georeferencing",
	"tags": [],
	"description": "",
	"content": "The process of assigning geographic coordinates to an image is known as georeferencing. The process of shifting pixel locations to remove distortion is known as rectification. Often the process of rectification includes georeferencing, because one can both shift the pixels to remove distortion and assign coordinates to those pixels at the same time.\nGround Control Points A ground control point (GCP) is feature that you can clearly identify in the raw image for which you have a known ground coordinate. Ground coordinates can come from a variety of sources such as the Global Positioning System (GPS), ground surveys, Geo coded images, vectors, geographic information systems (GIS), topographic maps, chip databases, or by using photogrammetric pro- cesses to extend the number of GCPs in your images. A GCP determines the relationship between the raw image and the ground by associating the pixel (P) and line (L) image coordinates to the x, y and z coordinates on the ground.\nGCPs are specific pixels in an image for which the output map coordinates (or other output coordinates) are known. GCPs consist of two X,Y pairs of coordinates:\n  Source coordinates — usually data file coordinates in the image being rectified.\n  Reference coordinates — the coordinates of the map or reference image to which the source image is being registered.\n  The term map coordinates is sometimes used loosely to apply to reference coordinates and rectified coordinates. These coordinates are not limited to map coordinates. For example, in image-to-image registration, map coordinates are not necessary.\nGCPs in ERDAS IMAGINE Any ERDAS IMAGINE image can have one GCP set associated with it. The GCP set is stored in the image file along with the raster layers. If a GCP set exists for the top layer that is displayed in the Viewer, then those GCPs can be displayed when the Multipoint Geometric Correction tool (IMAGINE ribbon Workspace) or GCP Tool (Classic) is opened.\nIn the Cell Array of GCP data that displays in the Multipoint Geometric Correction tool or GCP Tool, one column shows the point ID of each GCP. The point ID is a name given to GCPs in separate files that represent the same geographic location. Such GCPs are called corresponding GCPs.\nA default point ID string is provided (such as GCP #1), but you can enter your own unique ID strings to set up corresponding GCPs as needed. Even though only one set of GCPs is associated with an image file, one GCP set can include GCPs for a number of rectifications by changing the point IDs for different groups of corresponding GCPs.\nEntering GCPs Accurate GCPs are essential for an accurate rectification. From the GCPs, the rectified coordinates for all other points in the image are extrapolated. Select many GCPs throughout the scene. The more dispersed the GCPs are, the more reliable the rectification is. GCPs for large-scale imagery might include the intersection of two roads, airport runways, utility corridors, towers, or buildings. For small-scale imagery, larger features such as urban areas or geologic features may be used. Landmarks that can vary (for example, the edges of lakes or other water bodies, vegetation, and so forth) should not be used.\nThe source and reference coordinates of the GCPs can be entered in the following ways: GCPs in IMAGINE Files.\nGCPs that are digitized in a Viewer are stored with the raster data that are opened in the Viewer. However, GCPs can also be recorded from a digitizing tablet or straight from the keyboard. In these cases, they are stored alone in IMAGINE files with the extension .gcc.\nThe input image file can be set to:\n  Existing Viewer\n  Image Layer (New Viewer) (Use the mouse to select a pixel from an image in the Viewer. With both the source and reference Viewers open, enter source coordinates and reference coordinates for image-to- image registration. The Multipoint Geometric Correction tool contains the both the source and reference Viewers within the tool)\n  Vector layer (New Viewer)\n  Annotation Layer (New Viewer)\n  GCP File (.gcc)\n  (Use an existing Ground Control Coordinates file (.gcc file extension). This file contains the X and Y coordinates along with the GCP point ID, saved as an external file.)\n  ASCII File\n  Digitizing Tablet (Current Configuration)\n  Use a digitizing tablet to register an image to a hardcopy map.\n  Digitizing Tablet (New Configuration)\n  Keyboard Only\n  (They may be known a priori, and entered at the keyboard. To enter or edit a GCP from the keyboard, use the Cell Array of GCP coordinates. The X Source, Y Source, X Dest, and Y Dest cells are editable. When you edit a GCP in the Cell Array, the GCP will move in the Viewer if it is opened)\nMap Georeferencing  From the Main Icon Panel select the File option and select open from the file menu you have to select raster layer. In the dialog box that appears, select the file From Image File radio button and then select file.img. Click OK. This is the image that has not been georeferenced. You know have a choice of geometric models. From the list of Geometric Models, select Polynomial and click OK .  Select the Projection Tab. Since a projection has not yet been defined, no projection will appear. Select the Set Projection from GCP Tool button. A dialog box will appear that gives you choices for the reference input. Click Apply and Close to the Polynomial Model Properties dialog box. You would only need to save the model parameters if you were performing repeated rectification .  From the GCP Tool Reference setup dialog box Select Keyboard only .\n Move both link boxes so that they cover a common identifiable point feature. This feature should now be seen in both chip viewers. From the GCP Editor Tool bar click the Keep Current Tool icon. Then click the Create GCP icon. Now digitize the common point in each of the chip viewers. Once this is done you will need to click on the Select GCP icon to click and drag the link boxes to other identifiable features.\n  In order to make your GCPs stand out visually, you may want to change their display color. From the GCP Tool Color column, click and select a desired color for all or individual GCPs.\n  You have to select 4 GCPs. Remember to distribute the GCPs evenly throughout the image. Editing out unwanted GCPs is possible through the Cell Array. First select the point and then using hidden functions in the first column, select Delete Selection.\n  When you are satisfied with the accuracy of your GCPs, you can save them. Select File/Save Input. Select/Save Reference. You may need to click yes to saving the GCP tables and they will be added as another no in the .img file structure.\n  From the Geo Correction Tools dialog, click the Display Resample Image Dialog icon .\n  In the Resample dialog box enter the Output file name xrectify.img. For the Resample Method use Neighborhood / Bilinear Interpolation. Click on the Ignore Zeros in Stats. Check box. Ensure that the projection information is displayed at the top of the dialog. Click OK to start the rectification.\nWhen the job is done click OK on the status box. Then close all the Geo Correction dialogboxes. If you have made any changes to the GCP Editor after the last save, then you will be prompted to save the edits. Click yes to saving current Geometric Model and name it xrectify.gms. In the viewers that remain, display xrectify.img in the viewer that contains the previously unrectified image and leaves the viewer as is.  Map to Image georeferencing When rectifying an image, you will use ERDAS IMAGINE to:\n record ground control points (GCPs) compute a transformation matrix, and use that transformation matrix and a resampling method to rectify the image.  If you are reprojecting georeferenced data from one map projection to another, there is a shortcut for generating GCPs and calculating a transformation matrix using a reprojection grid.\nsteps   Open Satellite Image in ERDAS IMAGINE 2013   Then select Multispectral → Control points.\n  In the dialog box appears, select Polynomial as Geometrical model.\n From the dialog box appears click on Image Layer    Then select required** Reference Map / Toposheet **(All file based raster format and Click OK. Then a dialog box named Polynomial Data Properties appears.\n  In the Projection section select** Add/Change Projection**.\n  A Projection Chooser tab appears .\n Select UTM WGS 84 → Zone 43, then select Close.  A new window containing both Satellite Image and Toposheet appears.\n Then select create GCP tool.   Click on dominant feature (Junctions, Road, and similar permanent objects) first on the Toposheet and then on Satellite image. Select such four GCPs .  Each GCP point clicks create a new Row on the bottom of the window comprising Lat and Long values.\n Select Display Resample Image Dialog. Name the Output file after selecting Nearest Neighbour as Resampling method.  "
},
{
	"uri": "/en/basics/import/",
	"title": "Importing Satellite data",
	"tags": [],
	"description": "",
	"content": "Satellite imagery is downladed from USGS website in zip file format. After extracting the zip file,\nSteps To decode the satllite image   Open satllite image in ERDAS IMAGINE 2013\n  Then select Manage data → Import data → Select format ( eg: Generic binary)\n    From the dialog box appears Select Input file, Set Output → Browse folder → Create file\n  Another dialog/pop up window appear named Import Generic Binary Data\n  From the dialog box appears enter data details of satllite images from CDINFO Select CDINFO → Enter each data in dialoge box → Importing Generic Binary Data\n  Text file containing details about Satellite Image\nTab for importing Generic Binary data "
},
{
	"uri": "/en/basics/mosaic/",
	"title": "Mosaic",
	"tags": [],
	"description": "",
	"content": "Mosaicking is a final step in the image preprocessing sequence often involves subsetting the image to reduce the data volume, layer stacking to combine multiple separate bands or layers in a single image, and/or mosaicking multiple images to cover a broader area.\nSubsetting may be used to reduce the spatial extent of an image, cropping the image to cover only the specific area of interest, and it may also involve selecting only certain spectral bands.\nThe subset images need to be precisely georeferenced so that after Mosaicking the boundary between two subsets can be avoided.\nSteps Once opened, from the View group on the Home tab select the Swipe tool to easily see where the two images overlap.\nNow start the mosaic workflow.\n  From the Raster tab, select Mosaic → Mosaic Pro.   Add two Subset images (Georefereced images).   If necessary, navigate to the directory that contains the first image, select it but do not click OK.\n  Add two subset images → Process → Run mosaic.\n   Moasaic image will be saved in the output folder.  "
},
{
	"uri": "/en/enhancement/ndvi/",
	"title": "Normalised Difference Vegetation Index(NDVI)",
	"tags": [],
	"description": "",
	"content": "NDVI is a vegetation index to monitor the condition of vegetation or vegetation health. NDVI is the most commonly used vegetation index for monitoring vegetation globally. There are many other veg- etation indices such as Enhanced Vegetation Index (EVI), Ratio Vegetation Index (RVI) and Perpendicular Vegetation Index (PVI) that takes into account the soil emissivity (one of the major limitations of NDVI).\nTo begin, open the NDVI dialog within the ERDAS IMAGINE.\nUpon the classification of NDVI image in various ranges based on the NDVI value following significant information can be extracted from imagery.\n  Barren rocks, sand, or snow show very low NDVI values (-0.1 to 0.1)\n  Shurbs and grasslands or senescing crops (– 0.2 to 0.5)\n  Dense vegetation or tropical rainforest (– 0.6 to 0.9)\n  Deep water (-1).\n  Steps  Click Raster tab → unsupervised button → NDVI option    Dialogue box will appear. Give input and output data.\n  Check the sensors were the appropriate information are taken. Select index → ndvi → Select OK.\n  Comparison between Normal satellite image and NDVI are given below\n  "
},
{
	"uri": "/en/basics/subset/",
	"title": "Subsetting an image",
	"tags": [],
	"description": "",
	"content": "A typical Landsat scene covers an area of about 185km by 185km. At times, it makes sense to cut out a subset of this larger image to simplify analysis and focus on the portion of the scene that is of primary interest. By working with data that has a smaller file size it allows faster processing and display updates.\nCreating an AOI layer These options allow to define an AOI (Area of Interest) in the image, excluding other parts of the image. Specific processes can be applied to this AOI only, which can save considerable time and disk space. The option to use a specified AOI for processing is available from many dialogs throughout ERDAS IMAGINE.\nThe exercise is about how to create an AOI layer that can be saved as a file and recalled for later use.\n_ NOTE: Each viewer can display only one AOI layer at a time._\nSelect File → New → 2D View → AOI layer from the viewer menu bar. Open AOI Tools\n  Select Drawing button from the viewer menu bar.\n  Click the Rectangle icon from insert geometry in the AOI tool palette.\n  Move the cursor into the viewer window.\n  Drag and the release to draw a rectangle over the AOI. Save AOI\n  Select File → Save → AOI layer as from the viewer menu bar.\n  Enter the name for the AOI layer under save AOI as (the AOI extension is added automatically).\n  Steps   Create an AOI layer that we want to subset out.\n  Select Raster → Subset and chip → Create subset image .\n    From the Subset dialog box, select the input file and anoutput destination and file name also add the AOI layer.\n  When the job is done, push the OK button and your subset is ready to go.\n  Satellite image obtained from USGS is shown above and subset image is shown below\n"
},
{
	"uri": "/en/classification/supervised/",
	"title": "Supervised classification",
	"tags": [],
	"description": "",
	"content": "In supervised classification the image analyst supervises the pixel categorization process. In this approach, the users define useful information categories and then examine their spectral separability. This classification consists of three stages: Training stage, Classification stage and Output stage. Accuracy assessment is required to get an accurate classification.\nTraining In this stage, the analyst identifies representative training sites/areas (i.e., a particular land cover type), then the computer determines the spectral signatures of the pixels within each training are,and uses this information to define the mean and variance of each of the classes. The training stage requires close interaction between the image analyst and the image data. It also requires substantial reference data and a thorough knowledge of the geographic area to which the data apply. The more time and effort spent in collecting training site the better the classification results. To yield acceptable classification results, training data must be both representative and complete.\nCreating signature set   Open Erdas Imagine\n  Open satellite image (‘satdec.img’ (Landsat 8 OLI)) image in the viewer. File → open → select satellite image → Ok .\n  3. Subset the area of interest and change bands (True colour to False colour). To change bands: Multispectral → set layer- 3, 2, 1.\n4. Click on Raster tab → Supervised → Signature Editor. A new ‘Signature Editor’ window will open .\nNow go back up to the top of the screen and click on Drawing tab → Polygon Icon  Zoom the image. Click once within the water to start the polygon and then keep clicking to draw a polygon. These do not have to be large polygons but make sure that all the pixels within the polygon are of water. To finish the polygon just double click. An AOI (Area of Interest) layer is formed.  Bring up the Signature Editor window and click on the button with a + sign and an arrow (+ ) (Create new Signature(s) from AOI . This will add the polygon just created.   Repeat steps 5,6 and 7 for the rest of water. Increase in number of samples (AOI layer), will increase the accuracy of classification. 9 .Repeat the steps as water for rest of the classes (vegetation, grassland).\n  Once the preferable numbers of sample is selected the Signature Editor window should look like the image below.\n  Classification Stage In classification, each pixel in the image data set is categorized into the land cover class it most closely resembles. If the pixel is insufficiently similar to any training data set, it is usually labeled ‘unknown’. After all pixels in the input image have been categorized, the results are presented in the output stage.\n Click and hold on class 1, which is under the column ‘Class #’, and move the mouse down to the end of one class and then release. This will highlight all of the samples in a single class just created and then click on the button with three bars and the arrow (5th symbol in the tool bar) (merge selected signatures) to combine all the samples.  A new class should appear which a combination of all the samples collected .\nRight click on any of the numbers in the selection and then click Delete Selection to delete the samples since they are now combined into ‘new Class’. Rename the new class as ‘Water body’. Repeat the same for other classes (vegetation, grassland) also .  Once completed, save signature set. File → Save As in the Signature Editor window. A new popup window Signature File As appear choose save place → Ok .  Output Output products are in the form of thematic maps, tables of statistics for the various land cover classes and digital data files amenable to inclusion in a GIS (GIS input).\n Click on Raster → Supervised → Supervised classification Define: Input file, input Signature file (Saved signature file ‘signature.sig’), Classified file (Out- put file (Select Save place).   Enter Ok. A new process list window will appear, close it after the process is completed .\n  Open saved file .\n  "
},
{
	"uri": "/en/classification/unsupervised/",
	"title": "Unsupervised classification",
	"tags": [],
	"description": "",
	"content": "Unsupervised classifiers do not utilize training data as the basis for classification. Rather, this family of classifiers involves algorithms that examine the unknown pixels in an image and aggregate them into a number of classes based on the natural groupings or clusters present in the image val- ues.Hence it is also called as clustering.\nThe classes that result from unsupervised classification are spectral classes. Identity of the spectral classes will not be initially known. The analyst must compare the classified data with some form of reference data to determine the identity. There are numerous clustering algorithms that can be used to determine the natural spectral groupings present in a data set. One common form of clus- tering,called the K-means approach,accepts from the analyst the number of clusters to be located in the data.\nA widely used variant on the K-means method for unsupervised clustering is an algorithm called Iterative Self-Organizing Data Analysis Techniques. The Iterative Self Organizing Data Analysis –ISODATA clustering method uses spectral distance and iteratively classifies the pixels. After each iteration, ISODATA redefines the criteria for each class, and classifies again, gradually “discovering” the spectral distance patterns (i.e., the clusters)in the data.\nSteps To perform Unsupervised Classification of a Multispectral Image in Erdas Imagine.\n  Open up the layer stacked Liss 4 image in Erdas Imagine.\n  Click on the Raster tab → Classification → Unsupervised button → Unsupervised Classification\n  A dialogue box will appear.Enter input raster file name and output cluster layer file name.  Here Cluster options given as 80 Classes and 20 maximum iterations. After entering values click OK button .Then, Process list dialogue box will appear. After processing Open the saved output image .\n Open attribute table. Right-click for pop-up menu Select → Display Attribute Table.\n  To identify the feature\n  Click Home tab → inquire button → a dialogue box will appear as follows . Dialog box provide information about pixel value and class names .\n In order to identify a feature,compare the location with Google Map. After comparing we can able to identify the exact class of the given feature.\n  For example , Here class 11 shows the pixel value of water body.\n  So we named the class 11 as “water body\u0026rdquo; in the attribute table and in order to identify it, the colour also changed.\nIn similar way we identify another class as vegetation. After comparing 80 classes with Google map the results:  Masking-Correction in Spectral Signature Here some classes show exact spectral signature of another one (For example - Rock show same spectral signature of water body.)\nIn order to change selected class number to another class we use ” Thematic Recode” Select the **particular cell → create aoi layer → Drawing tool **Draw the cell\nClick on Thematic button → Recode → Pop up window will appear. Inside that dialogue box,  Click New Value → Formula → vegetation as 1 Click OK\nSelected cell will change into same spectral signature of vegetation.In similar method re- maining also corrected.\nAfter masking, to sort the given classes: Click on** Raster tab → Thematic → Recode **→ click on “**Setup Recode**” button → A dialog box will appear .  Inside dialogue box → click on → New Value → Sort → Sort by name\nAfter sorting, Value of each class are entered into the ”New value” column → click OK  In recode dialogue box also Click OK.Processing of above take place and Process List dia- logue box will appear.\nOpen the saved file.Attribute table appear and only main classes will appear.Change the colour according to class and save the layer.\nAttribute table before ( above one ) and after ( below one ) changing the colour based on the classes\nTable showing Class Name and their Value\n   Class Name Value     Barnen 1   Planatation 2   Urban 3   Vegetation 4   Waterbody 5    To insert Class names on the Attribute table Click on Table → Add Class Name and hence class names also added.  After entering Class names, Save the layer and the classification of given area is done.  Five class names entered are Barren,Plantation,Urban,Vegetation and Water body.\n"
},
{
	"uri": "/en/cont/menushortcuts/",
	"title": "Menu extra shortcuts",
	"tags": [],
	"description": "",
	"content": "You can define additional menu entries or shortcuts in the navigation menu without any link to content.\nBasic configuration Edit the website configuration config.toml and add a [[menu.shortcuts]] entry for each link your want to add.\nExample from the current website:\n[[menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fab fa-github'\u0026gt;\u0026lt;/i\u0026gt; Github repo\u0026quot; identifier = \u0026quot;ds\u0026quot; url = \u0026quot;https://github.com/matcornic/hugo-theme-learn\u0026quot; weight = 10 [[menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fas fa-camera'\u0026gt;\u0026lt;/i\u0026gt; Showcases\u0026quot; url = \u0026quot;/showcase\u0026quot; weight = 11 [[menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fas fa-bookmark'\u0026gt;\u0026lt;/i\u0026gt; Hugo Documentation\u0026quot; identifier = \u0026quot;hugodoc\u0026quot; url = \u0026quot;https://gohugo.io/\u0026quot; weight = 20 [[menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fas fa-bullhorn'\u0026gt;\u0026lt;/i\u0026gt; Credits\u0026quot; url = \u0026quot;/credits\u0026quot; weight = 30  By default, shortcuts are preceded by a title. This title can be disabled by setting disableShortcutsTitle=true. However, if you want to keep the title but change its value, it can be overriden by changing your local i18n translation string configuration.\nFor example, in your local i18n/en.toml file, add the following content\n[Shortcuts-Title] other = \u0026quot;\u0026lt;Your value\u0026gt;\u0026quot;  Read more about hugo menu and hugo i18n translation strings\nConfiguration for Multilingual mode When using a multilingual website, you can set different menus for each language. In the config.toml file, prefix your menu configuration by Languages.\u0026lt;language-id\u0026gt;.\nExample from the current website:\n[Languages] [Languages.en] title = \u0026quot;Documentation for Hugo Learn Theme\u0026quot; weight = 1 languageName = \u0026quot;English\u0026quot; [[Languages.en.menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fab fa-github'\u0026gt;\u0026lt;/i\u0026gt; Github repo\u0026quot; identifier = \u0026quot;ds\u0026quot; url = \u0026quot;https://github.com/matcornic/hugo-theme-learn\u0026quot; weight = 10 [[Languages.en.menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fas fa-camera'\u0026gt;\u0026lt;/i\u0026gt; Showcases\u0026quot; url = \u0026quot;/showcase\u0026quot; weight = 11 [[Languages.en.menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fas fa-bookmark'\u0026gt;\u0026lt;/i\u0026gt; Hugo Documentation\u0026quot; identifier = \u0026quot;hugodoc\u0026quot; url = \u0026quot;https://gohugo.io/\u0026quot; weight = 20 [[Languages.en.menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fas fa-bullhorn'\u0026gt;\u0026lt;/i\u0026gt; Credits\u0026quot; url = \u0026quot;/credits\u0026quot; weight = 30 [Languages.fr] title = \u0026quot;Documentation du thème Hugo Learn\u0026quot; weight = 2 languageName = \u0026quot;Français\u0026quot; [[Languages.fr.menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fab fa-github'\u0026gt;\u0026lt;/i\u0026gt; Repo Github\u0026quot; identifier = \u0026quot;ds\u0026quot; url = \u0026quot;https://github.com/matcornic/hugo-theme-learn\u0026quot; weight = 10 [[Languages.fr.menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fas fa-camera'\u0026gt;\u0026lt;/i\u0026gt; Vitrine\u0026quot; url = \u0026quot;/showcase\u0026quot; weight = 11 [[Languages.fr.menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fas fa-bookmark'\u0026gt;\u0026lt;/i\u0026gt; Documentation Hugo\u0026quot; identifier = \u0026quot;hugodoc\u0026quot; url = \u0026quot;https://gohugo.io/\u0026quot; weight = 20 [[Languages.fr.menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fas fa-bullhorn'\u0026gt;\u0026lt;/i\u0026gt; Crédits\u0026quot; url = \u0026quot;/credits\u0026quot; weight = 30  Read more about hugo menu and hugo multilingual menus\n"
},
{
	"uri": "/en/basics/style-customization/",
	"title": "Style customization",
	"tags": [],
	"description": "",
	"content": "Hugo-theme-learn has been built to be as configurable as possible by defining multiple partials\nIn themes/hugo-theme-learn/layouts/partials/, you will find all the partials defined for this theme. If you need to overwrite something, don\u0026rsquo;t change the code directly. Instead follow this page. You\u0026rsquo;d create a new partial in the layouts/partials folder of your local project. This partial will have the priority.\nThis theme defines the following partials :\n header: the header of the content page (contains the breadcrumbs). Not meant to be overwritten custom-header: custom headers in page. Meant to be overwritten when adding CSS imports. Don\u0026rsquo;t forget to include style HTML tag directive in your file footer: the footer of the content page (contains the arrows). Not meant to be overwritten custom-footer: custom footer in page. Meant to be overwritten when adding Javacript. Don\u0026rsquo;t forget to include javascript HTML tag directive in your file favicon: the favicon logo: the logo, on top left hand corner. meta: HTML meta tags, if you want to change default behavior menu: left menu. Not meant to be overwritten menu-footer: footer of the the left menu search: search box toc: table of contents  Change the logo Create a new file in layouts/partials/ named logo.html. Then write any HTML you want. You could use an img HTML tag and reference an image created under the static folder, or you could paste a SVG definition !\nThe size of the logo will adapt automatically\n Change the favicon If your favicon is a png, just drop off your image in your local static/images/ folder and name it favicon.png\nIf you need to change this default behavior, create a new file in layouts/partials/ named favicon.html. Then write something like this:\n\u0026lt;link rel=\u0026#34;shortcut icon\u0026#34; href=\u0026#34;/images/favicon.png\u0026#34; type=\u0026#34;image/x-icon\u0026#34; /\u0026gt; Change default colors Hugo Learn theme let you choose between 3 native color scheme variants, but feel free to add one yourself ! Default color scheme is based on Grav Learn Theme.\nRed variant [params] # Change default color scheme with a variant one. Can be \u0026#34;red\u0026#34;, \u0026#34;blue\u0026#34;, \u0026#34;green\u0026#34;. themeVariant = \u0026#34;red\u0026#34; Blue variant [params] # Change default color scheme with a variant one. Can be \u0026#34;red\u0026#34;, \u0026#34;blue\u0026#34;, \u0026#34;green\u0026#34;. themeVariant = \u0026#34;blue\u0026#34; Green variant [params] # Change default color scheme with a variant one. Can be \u0026#34;red\u0026#34;, \u0026#34;blue\u0026#34;, \u0026#34;green\u0026#34;. themeVariant = \u0026#34;green\u0026#34; \u0026lsquo;Yours‘ variant First, create a new CSS file in your local static/css folder prefixed by theme (e.g. with mine theme static/css/theme-mine.css). Copy the following content and modify colors in CSS variables.\n:root{ --MAIN-TEXT-color:#323232; /* Color of text by default */ --MAIN-TITLES-TEXT-color: #5e5e5e; /* Color of titles h2-h3-h4-h5 */ --MAIN-LINK-color:#1C90F3; /* Color of links */ --MAIN-LINK-HOVER-color:#167ad0; /* Color of hovered links */ --MAIN-ANCHOR-color: #1C90F3; /* color of anchors on titles */ --MENU-HEADER-BG-color:#1C90F3; /* Background color of menu header */ --MENU-HEADER-BORDER-color:#33a1ff; /*Color of menu header border */ --MENU-SEARCH-BG-color:#167ad0; /* Search field background color (by default borders + icons) */ --MENU-SEARCH-BOX-color: #33a1ff; /* Override search field border color */ --MENU-SEARCH-BOX-ICONS-color: #a1d2fd; /* Override search field icons color */ --MENU-SECTIONS-ACTIVE-BG-color:#20272b; /* Background color of the active section and its childs */ --MENU-SECTIONS-BG-color:#252c31; /* Background color of other sections */ --MENU-SECTIONS-LINK-color: #ccc; /* Color of links in menu */ --MENU-SECTIONS-LINK-HOVER-color: #e6e6e6; /* Color of links in menu, when hovered */ --MENU-SECTION-ACTIVE-CATEGORY-color: #777; /* Color of active category text */ --MENU-SECTION-ACTIVE-CATEGORY-BG-color: #fff; /* Color of background for the active category (only) */ --MENU-VISITED-color: #33a1ff; /* Color of \u0026#39;page visited\u0026#39; icons in menu */ --MENU-SECTION-HR-color: #20272b; /* Color of \u0026lt;hr\u0026gt; separator in menu */ } body { color: var(--MAIN-TEXT-color) !important; } textarea:focus, input[type=\u0026#34;email\u0026#34;]:focus, input[type=\u0026#34;number\u0026#34;]:focus, input[type=\u0026#34;password\u0026#34;]:focus, input[type=\u0026#34;search\u0026#34;]:focus, input[type=\u0026#34;tel\u0026#34;]:focus, input[type=\u0026#34;text\u0026#34;]:focus, input[type=\u0026#34;url\u0026#34;]:focus, input[type=\u0026#34;color\u0026#34;]:focus, input[type=\u0026#34;date\u0026#34;]:focus, input[type=\u0026#34;datetime\u0026#34;]:focus, input[type=\u0026#34;datetime-local\u0026#34;]:focus, input[type=\u0026#34;month\u0026#34;]:focus, input[type=\u0026#34;time\u0026#34;]:focus, input[type=\u0026#34;week\u0026#34;]:focus, select[multiple=multiple]:focus { border-color: none; box-shadow: none; } h2, h3, h4, h5 { color: var(--MAIN-TITLES-TEXT-color) !important; } a { color: var(--MAIN-LINK-color); } .anchor { color: var(--MAIN-ANCHOR-color); } a:hover { color: var(--MAIN-LINK-HOVER-color); } #sidebar ul li.visited \u0026gt; a .read-icon { color: var(--MENU-VISITED-color); } #body a.highlight:after { display: block; content: \u0026#34;\u0026#34;; height: 1px; width: 0%; -webkit-transition: width 0.5s ease; -moz-transition: width 0.5s ease; -ms-transition: width 0.5s ease; transition: width 0.5s ease; background-color: var(--MAIN-LINK-HOVER-color); } #sidebar { background-color: var(--MENU-SECTIONS-BG-color); } #sidebar #header-wrapper { background: var(--MENU-HEADER-BG-color); color: var(--MENU-SEARCH-BOX-color); border-color: var(--MENU-HEADER-BORDER-color); } #sidebar .searchbox { border-color: var(--MENU-SEARCH-BOX-color); background: var(--MENU-SEARCH-BG-color); } #sidebar ul.topics \u0026gt; li.parent, #sidebar ul.topics \u0026gt; li.active { background: var(--MENU-SECTIONS-ACTIVE-BG-color); } #sidebar .searchbox * { color: var(--MENU-SEARCH-BOX-ICONS-color); } #sidebar a { color: var(--MENU-SECTIONS-LINK-color); } #sidebar a:hover { color: var(--MENU-SECTIONS-LINK-HOVER-color); } #sidebar ul li.active \u0026gt; a { background: var(--MENU-SECTION-ACTIVE-CATEGORY-BG-color); color: var(--MENU-SECTION-ACTIVE-CATEGORY-color) !important; } #sidebar hr { border-color: var(--MENU-SECTION-HR-color); } Then, set the themeVariant value with the name of your custom theme file. That\u0026rsquo;s it !\n[params] # Change default color scheme with a variant one. Can be \u0026#34;red\u0026#34;, \u0026#34;blue\u0026#34;, \u0026#34;green\u0026#34;. themeVariant = \u0026#34;mine\u0026#34; "
},
{
	"uri": "/en/cont/icons/",
	"title": "Icons and logos",
	"tags": [],
	"description": "",
	"content": "The Learn theme for Hugo loads the Font Awesome library, allowing you to easily display any icon or logo available in the Font Awesome free collection.\nFinding an icon Browse through the available icons in the Font Awesome Gallery. Notice that the free filter is enabled, as only the free icons are available by default.\nOnce on the Font Awesome page for a specific icon, for example the page for the heart, copy the HTML reference and paste into the markdown content.\nThe HTML to include the heart icon is:\n\u0026lt;i class=\u0026quot;fas fa-heart\u0026quot;\u0026gt;\u0026lt;/i\u0026gt; Including in markdown Paste the \u0026lt;i\u0026gt; HTML into markup and Font Awesome will load the relevant icon.\nBuilt with \u0026lt;i class=\u0026quot;fas fa-heart\u0026quot;\u0026gt;\u0026lt;/i\u0026gt; from Grav and Hugo Which appears as\nBuilt with from Grav and Hugo\nCustomising icons Font Awesome provides many ways to modify the icon\n Change colour (by default the icon will inherit the parent colour) Increase or decrease size Rotate Combine with other icons  Check the full documentation on web fonts with CSS for more.\n"
},
{
	"uri": "/en/enhancement/ndbi/",
	"title": "Normalised Difference Built-up Index (NDBI)",
	"tags": [],
	"description": "",
	"content": "Normalized Difference Built-up Index (NDBI) is used to extract built-up features and have indices range from -1 to 1. These procedures are similar to creating NDVI output.\nSteps   Open Raster Tab\n  Select Unsupervised button\n  Click NDVI from the options and Select OK.\n   Open Output image.  "
},
{
	"uri": "/en/cont/i18n/",
	"title": "Multilingual and i18n",
	"tags": [],
	"description": "",
	"content": "Learn theme is fully compatible with Hugo multilingual mode.\nIt provides:\n Translation strings for default values (English and French). Feel free to contribute ! Automatic menu generation from multilingual content In-browser language switching  Basic configuration After learning how Hugo handle multilingual websites, define your languages in your config.toml file.\nFor example with current French and English website.\n# English is the default language defaultContentLanguage = \u0026#34;en\u0026#34; # Force to have /en/my-page and /fr/my-page routes, even for default language. defaultContentLanguageInSubdir= true [Languages] [Languages.en] title = \u0026#34;Documentation for Hugo Learn Theme\u0026#34; weight = 1 languageName = \u0026#34;English\u0026#34; [Languages.fr] title = \u0026#34;Documentation du thème Hugo Learn\u0026#34; weight = 2 languageName = \u0026#34;Français\u0026#34; Then, for each new page, append the id of the language to the file.\n Single file my-page.md is split in two files:  in English: my-page.en.md in French: my-page.fr.md   Single file _index.md is split in two files:  in English: _index.en.md in French: _index.fr.md    Be aware that only translated pages are displayed in menu. It\u0026rsquo;s not replaced with default language content.\n Use slug Front Matter parameter to translate urls too.\n Overwrite translation strings Translations strings are used for common default values used in the theme (Edit this page button, Search placeholder and so on). Translations are available in french and english but you may use another language or want to override default values.\nTo override these values, create a new file in your local i18n folder i18n/\u0026lt;idlanguage\u0026gt;.toml and inspire yourself from the theme themes/hugo-theme-learn/i18n/en.toml\nBy the way, as these translations could be used by other people, please take the time to propose a translation by making a PR to the theme !\nDisable language switching Switching the language in the browser is a great feature, but for some reasons you may want to disable it.\nJust set disableLanguageSwitchingButton=true in your config.toml\n[params] # When using mulitlingual website, disable the switch language button. disableLanguageSwitchingButton = true "
},
{
	"uri": "/en/cont/tags/",
	"title": "Tags",
	"tags": ["documentation", "tutorial"],
	"description": "",
	"content": "Learn theme support one default taxonomy of gohugo: the tag feature.\nConfiguration Just add tags to any page:\n--- date: 2018-11-29T08:41:44+01:00 title: Theme tutorial weight: 15 tags: [\u0026#34;tutorial\u0026#34;, \u0026#34;theme\u0026#34;] --- Behavior The tags are displayed at the top of the page, in their insertion order.\nEach tag is a link to a Taxonomy page displaying all the articles with the given tag.\nList all the tags In the config.toml file you can add a shortcut to display all the tags\n[[menu.shortcuts]] name = \u0026#34;\u0026lt;i class=\u0026#39;fas fa-tags\u0026#39;\u0026gt;\u0026lt;/i\u0026gt; Tags\u0026#34; url = \u0026#34;/tags\u0026#34; weight = 30 "
},
{
	"uri": "/en/",
	"title": "Beginners guide to ERDAS IMAGINE",
	"tags": [],
	"description": "",
	"content": "Beginners guide to ERDAS IMAGINE The use of computers for digital processing and analysis began in the 1960s with early studies of airborne multispectral scanner data and digitized aerial photographs. However, it was not until the launch of Landsat-1 in 1972 that digital image data became widely available for land remote sensing applications. At that time, not only was the theory and practice of digital image processing in its infancy, but also the cost of digital computers was very high, and their computational efficiency was very low by modern standards. Today, access to low-cost, efficient computer hardware and software is commonplace, and the sources of digital image data are many and varied. These sources range from commercial and governmental earth resource satellite systems, to the meteorological satellites, to airborne scanner data, to airborne digital camera data, to image data generated by photogrammetric scanners and other high resolution digitizing systems.\nThe central idea behind digital image processing is quite simple. One or more images are loaded into a computer. The computer is programmed to perform calculations using an equation, or series of equations, that take pixel values from the raw image as input. In most cases, the output will be a new digital image whose pixel values are the result of those calculations. This output image may be displayed or recorded in pictorial format or may itself be further manipulated by additional software. The possible forms of digital image manipulation are seemingly infinite.\n"
},
{
	"uri": "/en/tags/documentation/",
	"title": "documentation",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/en/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/en/tags/tutorial/",
	"title": "tutorial",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/en/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/en/credits/",
	"title": "Credits",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/en/showcase/",
	"title": "Showcase",
	"tags": [],
	"description": "",
	"content": ""
}]